[{"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\index.js":"1","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\App.js":"2","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\reportWebVitals.js":"3","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\createStore.js":"4","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.actions.js":"5","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\hoc\\withAuth.js":"6","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\hoc\\withAdminAuth.js":"7","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\MainLayout.js":"8","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\AdminLayout.js":"9","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\DashboardLayout.js":"10","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\rootReducer.js":"11","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\rootSaga.js":"12","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Search\\index.js":"13","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Homepage\\index.js":"14","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Registration\\index.js":"15","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Login\\index.js":"16","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Dashboard\\index.js":"17","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Recovery\\index.js":"18","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Admin\\index.js":"19","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\ProductDetails\\index.js":"20","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Cart\\index.js":"21","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Payment\\index.js":"22","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\PaymentDetails\\index.js":"23","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.types.js":"24","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.reducer.js":"25","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.sagas.js":"26","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.reducer.js":"27","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.reducer.js":"28","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.sagas.js":"29","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Sidedrawer\\DrawerToggleButton\\drawerToggleButton.js":"30","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Sidedrawer\\Backdrop\\Backdrop.js":"31","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\customHooks\\index.js":"32","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.actions.js":"33","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Footer\\index.js":"34","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Header\\index.js":"35","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\VerticalNav\\index.js":"36","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.actions.js":"37","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.selectors.js":"38","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Sidedrawer\\SideDrawer\\index.js":"39","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.helpers.js":"40","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.types.js":"41","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.types.js":"42","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\firebase\\utils.js":"43","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.helpers.js":"44","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.utils.js":"45","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\ProductResults\\index.js":"46","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Landing\\index.js":"47","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\SignIn\\index.js":"48","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Signup\\index.js":"49","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\EmailPassword\\index.js":"50","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Square\\index.js":"51","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\Utils\\index.js":"52","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\ProductCard\\index.js":"53","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Checkout\\index.js":"54","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\LoadMore\\index.js":"55","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Modal\\index.js":"56","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\forms\\Button\\index.js":"57","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\forms\\FormInput\\index.js":"58","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\forms\\FormSelect\\index.js":"59","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\customHooks\\useAuth.js":"60","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\customHooks\\useAdminAuth.js":"61","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\firebase\\config.js":"62","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\UserProfile\\index.js":"63","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\Utils\\paymentForm.js":"64","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\AdminToolbar\\index.js":"65","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\ProductResults\\Product\\index.js":"66","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\AuthWrapper\\index.js":"67","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Landing\\Preview\\index.js":"68","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Checkout\\Item\\index.js":"69","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Welcome\\index.js":"70","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\WelcomeLayout.js":"71"},{"size":852,"mtime":1610960213958,"results":"72","hashOfConfig":"73"},{"size":2914,"mtime":1617643546964,"results":"74","hashOfConfig":"73"},{"size":362,"mtime":499162500000,"results":"75","hashOfConfig":"73"},{"size":620,"mtime":1608512202657,"results":"76","hashOfConfig":"73"},{"size":1203,"mtime":1608087906616,"results":"77","hashOfConfig":"73"},{"size":136,"mtime":1608091809785,"results":"78","hashOfConfig":"73"},{"size":152,"mtime":1608090612144,"results":"79","hashOfConfig":"73"},{"size":1372,"mtime":1617643565812,"results":"80","hashOfConfig":"73"},{"size":2247,"mtime":1608603365486,"results":"81","hashOfConfig":"73"},{"size":1192,"mtime":1608093174928,"results":"82","hashOfConfig":"73"},{"size":592,"mtime":1608512415903,"results":"83","hashOfConfig":"73"},{"size":273,"mtime":1608107149567,"results":"84","hashOfConfig":"73"},{"size":259,"mtime":1608236248262,"results":"85","hashOfConfig":"73"},{"size":366,"mtime":1617584248820,"results":"86","hashOfConfig":"73"},{"size":316,"mtime":1607968955380,"results":"87","hashOfConfig":"73"},{"size":180,"mtime":1607654287858,"results":"88","hashOfConfig":"73"},{"size":197,"mtime":1611020723802,"results":"89","hashOfConfig":"73"},{"size":191,"mtime":1607981609803,"results":"90","hashOfConfig":"73"},{"size":8599,"mtime":1611004580994,"results":"91","hashOfConfig":"73"},{"size":301,"mtime":1610053081865,"results":"92","hashOfConfig":"73"},{"size":211,"mtime":1608504705348,"results":"93","hashOfConfig":"73"},{"size":198,"mtime":1608530505877,"results":"94","hashOfConfig":"73"},{"size":13176,"mtime":1611041800088,"results":"95","hashOfConfig":"73"},{"size":571,"mtime":1608087941117,"results":"96","hashOfConfig":"73"},{"size":1000,"mtime":1608087171059,"results":"97","hashOfConfig":"73"},{"size":3650,"mtime":1610930896703,"results":"98","hashOfConfig":"73"},{"size":587,"mtime":1608268043924,"results":"99","hashOfConfig":"73"},{"size":1326,"mtime":1608575368585,"results":"100","hashOfConfig":"73"},{"size":2174,"mtime":1608271180820,"results":"101","hashOfConfig":"73"},{"size":310,"mtime":1617638902518,"results":"102","hashOfConfig":"73"},{"size":172,"mtime":1608597575315,"results":"103","hashOfConfig":"73"},{"size":123,"mtime":1608090549005,"results":"104","hashOfConfig":"73"},{"size":785,"mtime":1608267344633,"results":"105","hashOfConfig":"73"},{"size":672,"mtime":1610040788824,"results":"106","hashOfConfig":"73"},{"size":1566,"mtime":1617636502699,"results":"107","hashOfConfig":"73"},{"size":597,"mtime":1608093469313,"results":"108","hashOfConfig":"73"},{"size":462,"mtime":1608575332467,"results":"109","hashOfConfig":"73"},{"size":1104,"mtime":1610997801443,"results":"110","hashOfConfig":"73"},{"size":1516,"mtime":1617639337466,"results":"111","hashOfConfig":"73"},{"size":527,"mtime":1608085665909,"results":"112","hashOfConfig":"73"},{"size":331,"mtime":1608267222570,"results":"113","hashOfConfig":"73"},{"size":201,"mtime":1608575299269,"results":"114","hashOfConfig":"73"},{"size":1371,"mtime":1608089286976,"results":"115","hashOfConfig":"73"},{"size":2403,"mtime":1608269280584,"results":"116","hashOfConfig":"73"},{"size":2885,"mtime":1610996467548,"results":"117","hashOfConfig":"73"},{"size":2775,"mtime":1611005906489,"results":"118","hashOfConfig":"73"},{"size":2000,"mtime":1617642938728,"results":"119","hashOfConfig":"73"},{"size":2914,"mtime":1611041896089,"results":"120","hashOfConfig":"73"},{"size":3946,"mtime":1608088304659,"results":"121","hashOfConfig":"73"},{"size":2533,"mtime":1608088175274,"results":"122","hashOfConfig":"73"},{"size":716,"mtime":1608671007169,"results":"123","hashOfConfig":"73"},{"size":395,"mtime":1611126967840,"results":"124","hashOfConfig":"73"},{"size":3939,"mtime":1610998708912,"results":"125","hashOfConfig":"73"},{"size":5404,"mtime":1611120395517,"results":"126","hashOfConfig":"73"},{"size":277,"mtime":1608259928401,"results":"127","hashOfConfig":"73"},{"size":427,"mtime":1608233616924,"results":"128","hashOfConfig":"73"},{"size":251,"mtime":1607656138729,"results":"129","hashOfConfig":"73"},{"size":435,"mtime":1607969362285,"results":"130","hashOfConfig":"73"},{"size":828,"mtime":1608096300366,"results":"131","hashOfConfig":"73"},{"size":507,"mtime":1608091857458,"results":"132","hashOfConfig":"73"},{"size":643,"mtime":1608090501412,"results":"133","hashOfConfig":"73"},{"size":369,"mtime":1611125266700,"results":"134","hashOfConfig":"73"},{"size":688,"mtime":1608094423090,"results":"135","hashOfConfig":"73"},{"size":2621,"mtime":1611126979319,"results":"136","hashOfConfig":"73"},{"size":668,"mtime":1610930053619,"results":"137","hashOfConfig":"73"},{"size":3642,"mtime":1610998700850,"results":"138","hashOfConfig":"73"},{"size":456,"mtime":1607980408757,"results":"139","hashOfConfig":"73"},{"size":717,"mtime":1608600064446,"results":"140","hashOfConfig":"73"},{"size":2299,"mtime":1610996358241,"results":"141","hashOfConfig":"73"},{"size":349,"mtime":1617639711990,"results":"142","hashOfConfig":"73"},{"size":1431,"mtime":1617643525173,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"18e2scm",{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"146"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"146"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"146"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"146"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"146"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"146"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"146"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"146"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"146"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"146"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"146"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"146"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"146"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"146"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"146"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"146"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\index.js",[],["311","312"],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\App.js",["313","314","315"],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\reportWebVitals.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\createStore.js",["316"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddle from 'redux-saga';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddle();\r\n\r\nexport const middlewares = [thunk, sagaMiddleware, logger ];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {\r\n    store,\r\n    persistor\r\n};","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.actions.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\hoc\\withAuth.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\hoc\\withAdminAuth.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\MainLayout.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\AdminLayout.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\DashboardLayout.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\rootReducer.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\rootSaga.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Search\\index.js",["317"],"import React from 'react';\r\nimport ProductResults from '../../components/ProductResults';\r\n\r\nconst Search = ({  }) => {\r\n    return (\r\n        <div className='searchPage'>\r\n            <ProductResults />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Homepage\\index.js",["318"],"import React, { useState } from 'react';\r\nimport Landing from '../../components/Landing';\r\nimport './styles.scss'\r\n\r\n\r\n\r\n\r\nconst Homepage = props => {\r\n   \r\n    return (\r\n        <section className='homepage'>\r\n            \r\n       \r\n          \r\n                <Landing />\r\n                \r\n           \r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Registration\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Login\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Recovery\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Admin\\index.js",["319"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  addProductStart, fetchProductsStart, deleteProductStart } from '../../redux/Products/products.actions';\r\nimport FormInput from '../../components/forms/FormInput';\r\nimport FormSelect from '../../components/forms/FormSelect';\r\nimport Modal from '../../components/Modal';\r\nimport './styles.scss';\r\nimport Button from '../../components/forms/Button';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport CKEditor from 'ckeditor4-react';\r\n\r\nconst mapState =({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\n\r\nconst Admin = props => {\r\nconst { products } = useSelector(mapState);\r\nconst dispatch = useDispatch();\r\nconst [hideModal, setHideModal] = useState(true);\r\nconst [productCategory, setProductCategory] = useState('prints');\r\nconst [productName, setProductName] = useState('');\r\nconst [productThumbnail, setProductThumbnail] = useState('');\r\nconst [productPrice, setProductPrice] = useState(0);\r\nconst [secondProductPrice, setSecondProductPrice] = useState(0);\r\nconst [productDesc, setProductDesc] = useState('');\r\n\r\n\r\nconst { data, queryDoc, isLastPage } = products;\r\n\r\nuseEffect(() => {\r\n    dispatch(\r\n        fetchProductsStart()\r\n    );\r\n}, []);\r\n\r\nconst toggleModal = () => setHideModal(!hideModal);\r\n\r\nconst configModal = {\r\n    hideModal,\r\n    toggleModal\r\n};\r\n\r\nconst resetForm = () => {\r\n    setHideModal(true);\r\n    setProductCategory('prints');\r\n    setProductName('');\r\n    setProductThumbnail('');\r\n    setProductPrice(0);\r\n    setProductDesc('');\r\n    setSecondProductPrice(0);\r\n};\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n        addProductStart({\r\n            productCategory,\r\n            productName,\r\n            productThumbnail,\r\n            productPrice,\r\n            secondProductPrice,\r\n            productDesc\r\n        })\r\n    );\r\n    resetForm();\r\n};\r\n\r\nconst handleLoadMore = () => {\r\n    dispatch(\r\n        fetchProductsStart({\r\n            startAfterDoc: queryDoc,\r\n            persistProducts: data\r\n        })\r\n    );\r\n};\r\n\r\nconst configLoadMore = {\r\n    onLoadMoreEvt: handleLoadMore\r\n};\r\n\r\n\r\n    return (\r\n        <div className='admin'>\r\n            <div className='callToActions'>\r\n                <ul>\r\n                    <li>\r\n                        <Button onClick={() => toggleModal()}>\r\n                            Add New Product\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <Modal {...configModal}>\r\n                <div className='addNewProductForm'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2>\r\n                            Add New Product\r\n                        </h2>\r\n                        <FormSelect\r\n                            label='Category'\r\n                            options={[{\r\n                                value: \"prints\",\r\n                                name: 'Prints'\r\n                            }, {\r\n                                value: 'cards',\r\n                                name: 'Cards'\r\n                            }]}\r\n                            handleChange={e => setProductCategory(e.target.value)}\r\n                        />\r\n                        <FormInput \r\n                            label='Name'\r\n                            type='text'\r\n                            value={productName}\r\n                            handleChange={e => setProductName(e.target.value)}\r\n                        />\r\n                        <FormInput\r\n                            label='Main image URL'\r\n                            type='url'\r\n                            value={productThumbnail}\r\n                            handleChange= {e => setProductThumbnail(e.target.value)}\r\n                        ></FormInput>\r\n                        \r\n                        <FormInput \r\n                            label='Price'\r\n                            type='number'\r\n                            min='0.00'\r\n                            max='10000.00'\r\n                            step='0.01'\r\n                            value={productPrice}\r\n                            handleChange={e => setProductPrice(e.target.value)}\r\n                        />\r\n\r\n                        <FormInput \r\n                            label='12x18 Price'\r\n                            type='number'\r\n                            min='0.00'\r\n                            max='10000.00'\r\n                            step='0.01'\r\n                            value={secondProductPrice}\r\n                            handleChange={e => setSecondProductPrice(e.target.value)}\r\n                        />\r\n\r\n                        <CKEditor\r\n                            onChange={evt => setProductDesc(evt.editor.getData())}\r\n                        />\r\n                        <br />\r\n                        <Button type='submit'>\r\n                            Add product\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n\r\n            <div className='manageProducts'>\r\n\r\n                <table border='0' cellPadding='0' cellSpacing='0'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>\r\n                                <h1>\r\n                                    Manage Products\r\n                                </h1>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <table className='results' border='0' cellPadding='10' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        {(Array.isArray(data) && data.length > 0) && data.map((product, index) => {\r\n                                            const {\r\n                                                productName,\r\n                                                productThumbnail,\r\n                                                productPrice,\r\n                                                documentID\r\n                                            } = product;\r\n\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>\r\n                                                        <img src={productThumbnail} alt='product' className='thumb' />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {productName}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        ${productPrice}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => dispatch(deleteProductStart(documentID))}>\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <table border='0' cellPadding='10' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                {!isLastPage && (\r\n                                                <LoadMore {...configLoadMore}/>)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\ProductDetails\\index.js",["320"],"import React from 'react';\r\nimport ProductCard from '../../components/ProductCard';\r\nimport './styles.scss';\r\n\r\nconst ProductDetails = ({ }) => {\r\n    return (\r\n        <div className='product-card-container'>\r\n            <ProductCard />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Cart\\index.js",["321"],"import React from 'react';\r\nimport Checkout from '../../components/Checkout';\r\n\r\nconst Cart = ({}) => {\r\n    return (\r\n        <div>\r\n            <Checkout />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\pages\\Payment\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\PaymentDetails\\index.js",["322","323","324","325","326","327"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FormInput from '../forms/FormInput';\r\nimport Button from '../forms/Button';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport { apiInstance } from '../../Utils';\r\nimport { selectCartTotal, selectCartItemsCount } from '../../redux/Cart/cart.selectors';\r\nimport { clearCart } from '../../redux/Cart/cart.actions';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Square from '../Square';\r\nimport {\r\n    SquarePaymentForm,\r\n    CreditCardNumberInput,\r\n    CreditCardExpirationDateInput,\r\n    CreditCardPostalCodeInput,\r\n    CreditCardCVVInput,\r\n    CreditCardSubmitButton\r\n} from 'react-square-payment-form'\r\nimport 'react-square-payment-form/lib/default.css'\r\nimport './styles.scss'\r\n\r\nconst initialAddressState = {\r\n    line1: '',\r\n    line2: '',\r\n    city: '',\r\n    state: '',\r\n    zip_code: '',\r\n    country: '',\r\n    phone: '',\r\n    email: ''\r\n}\r\n\r\nconst mapState = createStructuredSelector({\r\n    total: selectCartTotal,\r\n    itemCount: selectCartItemsCount\r\n});\r\n\r\nconst initialPaymentState = { errorMessages: [] }\r\n\r\nconst PaymentDetails = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { total, itemCount } = useSelector(mapState);\r\n    const [billingAddress, setBillingAddress] = useState({ ...initialAddressState });\r\n    const [shippingAddress, setShippingAddress] = useState({ ...initialAddressState });\r\n    const [recipientName, setRecipientName] = useState('');\r\n    const [firstNameOnCard, setFirstNameOnCard] = useState('');\r\n    const [lastNameOnCard, setLastNameOnCard] = useState('')\r\n    const [isLoad, setLoad] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState(initialPaymentState)\r\n\r\n    const cardNonceResponseReceived = (errors, nonce, cardData, buyerVerificationToken) => {\r\n        if (errors) {\r\n            setErrorMessages({ errorMessages: errors.map(error => error.message) })\r\n            return\r\n        }\r\n\r\n        setErrorMessages({ errorMessages: [] })\r\n        alert(\"nonce created: \" + nonce + \", buyerVerificationToken: \" + buyerVerificationToken)\r\n        apiInstance.post('/process-payment', { nonce: nonce, token: buyerVerificationToken })\r\n        console.log({ nonce, buyerVerificationToken })\r\n        console.log(process.env.REACT_APP_APPLICATION_ID)\r\n        dispatch(\r\n            clearCart()\r\n        )\r\n    }\r\n\r\n    const createVerificationDetails = () => {\r\n        return {\r\n            amount: total,\r\n            currencyCode: \"USD\",\r\n            intent: \"CHARGE\",\r\n            billingContact: {\r\n                familyName: billingAddress.lastNameOnCard,\r\n                givenName: billingAddress.firstNameOnCard,\r\n                email: billingAddress.email,\r\n                country: billingAddress.country,\r\n                city: billingAddress.city,\r\n                addressLines: [billingAddress.line1, billingAddress.line2],\r\n                postalCode: billingAddress.postalCode,\r\n                phone: billingAddress.phone\r\n            }\r\n        }\r\n    }\r\n\r\n    //useEffect(() => {\r\n    //    let sqPaymentScript = document.createElement(\"script\");\r\n    //    // sandbox: https://js.squareupsandbox.com/v2/paymentform\r\n    //    // production: https://js.squareup.com/v2/paymentform\r\n    //    sqPaymentScript.src = \"https://js.squareupsandbox.com/v2/paymentform\";\r\n    //    sqPaymentScript.type = \"text/javascript\";\r\n    //    sqPaymentScript.async = false;\r\n    //    sqPaymentScript.onload = () => {\r\n    //      setLoad(true);\r\n    //    };\r\n    //    document.getElementsByTagName(\"head\")[0].appendChild(sqPaymentScript);\r\n    //  });\r\n    //\r\n    //  const squarePayment = isLoad ? (\r\n    //        <Square paymentForm={ window.SqPaymentForm }/>\r\n    //    ) : (\r\n    //       null\r\n    //    )\r\n\r\n\r\n    useEffect(() => {\r\n        if (itemCount < 1) {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [itemCount])\r\n\r\n    const handleShipping = evt => {\r\n        const { name, value } = evt.target;\r\n        setShippingAddress({\r\n            ...shippingAddress,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleBilling = evt => {\r\n        const { name, value } = evt.target;\r\n        setBillingAddress({\r\n            ...billingAddress,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleFormSubmit = async evt => {\r\n        evt.preventDefault();\r\n\r\n        if (\r\n            !shippingAddress.line1 || !shippingAddress.city ||\r\n            !shippingAddress.state || !shippingAddress.zip_code ||\r\n            !shippingAddress.country || billingAddress.line1 ||\r\n            !billingAddress.city || !billingAddress.state ||\r\n            !billingAddress.zip_code || !billingAddress.country ||\r\n            !recipientName || !firstNameOnCard ||\r\n            !lastNameOnCard || !billingAddress.email ||\r\n            !billingAddress.phone\r\n        ) {\r\n            return;\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='paymentDetails'>\r\n            <form onSubmit={handleFormSubmit}>\r\n\r\n                <div className='group'>\r\n                    <h2>\r\n                        Shipping Address\r\n                    </h2>\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='recipientName'\r\n                        handleChange={evt => setRecipientName(evt.target.value)}\r\n                        placeholder='Recipient Name'\r\n                        value={recipientName}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='line1'\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        placeholder='Line 1'\r\n                        value={shippingAddress.line1}\r\n                    />\r\n\r\n                    <FormInput\r\n                        type='text'\r\n                        name='line2'\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        placeholder='Line 2'\r\n                        value={shippingAddress.line2}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='city'\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        placeholder='City'\r\n                        value={shippingAddress.city}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='state'\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        placeholder='State'\r\n                        value={shippingAddress.state}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='zip_code'\r\n                        handleChange={evt => handleShipping(evt)}\r\n                        placeholder='Zip Code'\r\n                        value={shippingAddress.zip_code}\r\n                    />\r\n\r\n                    <div className='formRow checkoutInput'>\r\n\r\n                        <CountryDropdown\r\n                            required\r\n                            onChange={val => handleShipping({\r\n                                target: {\r\n                                    name: 'country',\r\n                                    value: val\r\n                                }\r\n                            })}\r\n                            valueType='short'\r\n                            value={shippingAddress.country}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='group'>\r\n                    <h2>\r\n                        Billing Address\r\n                    </h2>\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='firstNameOnCard'\r\n                        handleChange={evt => setFirstNameOnCard(evt.target.value)}\r\n                        placeholder='First Name'\r\n                        value={firstNameOnCard}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='lastNameOnCard'\r\n                        handleChange={evt => setLastNameOnCard(evt.target.value)}\r\n                        placeholder='Last Name'\r\n                        value={lastNameOnCard}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='line1'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='Line 1'\r\n                        value={billingAddress.line1}\r\n                    />\r\n\r\n                    <FormInput\r\n                        type='text'\r\n                        name='line2'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='Line 2'\r\n                        value={billingAddress.line2}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='city'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='City'\r\n                        value={billingAddress.city}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='state'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='State'\r\n                        value={billingAddress.state}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='text'\r\n                        name='zip_code'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='Zip Code'\r\n                        value={billingAddress.zip_code}\r\n                    />\r\n\r\n                    <div className='formRow checkoutInput'>\r\n\r\n                        <CountryDropdown\r\n                            required\r\n                            onChange={val => handleBilling({\r\n                                target: {\r\n                                    name: 'country',\r\n                                    value: val\r\n                                }\r\n                            })}\r\n                            value={billingAddress.country}\r\n                            valueType='short'\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='tel'\r\n                        name='phone'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='Phone Number'\r\n                        value={billingAddress.phone}\r\n                    />\r\n\r\n                    <FormInput\r\n                        required\r\n                        type='email'\r\n                        name='email'\r\n                        handleChange={evt => handleBilling(evt)}\r\n                        placeholder='Email Address'\r\n                        value={billingAddress.email}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className='group'>\r\n                    <h2>\r\n                        Card Details\r\n                    </h2>\r\n                </div>\r\n                <SquarePaymentForm\r\n                    className='square-form'\r\n                    sandbox={true}\r\n                    applicationId={process.env.REACT_APP_APPLICATION_ID}\r\n                    locationId={process.env.REACT_APP_LOCATION_ID}\r\n                    cardNonceResponseReceived={cardNonceResponseReceived}\r\n                    createVerificationDetails={createVerificationDetails}\r\n                >\r\n                    <fieldset className=\"sq-fieldset\">\r\n                        <CreditCardNumberInput />\r\n                        <div className=\"sq-form-third\">\r\n                            <CreditCardExpirationDateInput />\r\n                        </div>\r\n\r\n                        <div className=\"sq-form-third\">\r\n                            <CreditCardPostalCodeInput />\r\n                        </div>\r\n\r\n                        <div className=\"sq-form-third\">\r\n                            <CreditCardCVVInput />\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <CreditCardSubmitButton>\r\n                        Pay {total}\r\n                    </CreditCardSubmitButton>\r\n                </SquarePaymentForm>\r\n\r\n\r\n\r\n            </form>\r\n            <div className='spacer'></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentDetails;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.types.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.reducer.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.sagas.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.reducer.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.reducer.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.sagas.js",["328"],"import { auth } from '../../firebase/utils';\r\nimport { takeLatest, put, all, call, take } from 'redux-saga/effects';\r\nimport { fetchProductsStart, setProducts, setProduct } from './products.actions';\r\nimport { handleAddProduct, handleFetchProducts, handleDeleteProduct, handleFetchProduct } from './products.helpers';\r\nimport productsTypes from './products.types';\r\n\r\nexport function* addProduct({ payload }) {\r\n\r\n    try {\r\n        const timestamp = new Date();\r\n        yield handleAddProduct({\r\n            ...payload,\r\n            productAdminUserUID: auth.currentUser.uid,\r\n            createdDate: timestamp\r\n        });\r\n        yield put(\r\n            fetchProductsStart()\r\n        );\r\n\r\n    } catch (err) {\r\n        //console.log(err)\r\n    }\r\n\r\n}\r\n\r\nexport function* onAddProductStart() {\r\n    yield takeLatest(productsTypes.ADD_NEW_PRODUCT_START, addProduct)\r\n}\r\n\r\nexport function* fetchProducts({ payload }) {\r\n    try {\r\n        const products = yield handleFetchProducts(payload);\r\n        yield put(\r\n            setProducts(products)\r\n        )\r\n\r\n    } catch (err) {\r\n        //console.log(err)\r\n    }\r\n}\r\n\r\nexport function* onFetchProductsStart() {\r\n    yield takeLatest(productsTypes.FETCH_PRODUCTS_START, fetchProducts)\r\n}\r\n\r\nexport function* deleteProduct({ payload }) {\r\n    try {\r\n        yield handleDeleteProduct(payload);\r\n        yield put(\r\n            fetchProductsStart()\r\n        );\r\n\r\n    } catch (err) {\r\n        //console.log(err)\r\n    }\r\n}\r\n\r\nexport function* onDeleteProductStart() {\r\n    yield takeLatest(productsTypes.DELETE_PRODUCT_START, deleteProduct)\r\n}\r\n\r\nexport function* fetchProduct({ payload }) {\r\n    try {\r\n        const product = yield handleFetchProduct(payload);\r\n        yield put(\r\n            setProduct(product)\r\n        )\r\n\r\n    } catch (err) {\r\n        //console.log(err);\r\n    }\r\n}\r\n\r\nexport function* onFetchProductStart() {\r\n    yield takeLatest(productsTypes.FETCH_PRODUCT_START, fetchProduct)\r\n}\r\n\r\nexport default function* productsSagas() {\r\n    yield all([\r\n        call(onAddProductStart),\r\n        call(onFetchProductsStart),\r\n        call(onDeleteProductStart),\r\n        call(onFetchProductStart)\r\n    ])\r\n}","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Sidedrawer\\DrawerToggleButton\\drawerToggleButton.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Sidedrawer\\Backdrop\\Backdrop.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\customHooks\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.actions.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Footer\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Header\\index.js",["329","330","331","332"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signOutUserStart } from '../../redux/User/user.actions'\r\nimport './styles.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { selectCartItemsCount } from '../../redux/Cart/cart.selectors';\r\nimport Cart from '../../assets/cart.svg'\r\n\r\n\r\n\r\nconst mapState = (state) => ({\r\n    currentUser: state.user.currentUser,\r\n    totalNumCartItems: selectCartItemsCount(state),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n//    const dispatch = useDispatch();\r\n//    \r\n    const { currentUser, totalNumCartItems } = useSelector(mapState);\r\n//    \r\n//\r\n//    const signOut = () => {\r\n//        dispatch(signOutUserStart());\r\n//    }\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <header className='header'>\r\n            <div className=\"wrap\"> \r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to='/' className='title'>\r\n                                Valley Apiaries\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <div className='callToActions'>\r\n                <ul>\r\n                <li>\r\n                <Link to='/cart'>\r\n                    <img src={Cart} alt='cart' />({totalNumCartItems})\r\n            </Link>\r\n            </li>\r\n            </ul>\r\n            </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    currentUser: null\r\n};\r\n\r\n\r\nexport default Header;","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\VerticalNav\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.actions.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.selectors.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Sidedrawer\\SideDrawer\\index.js",["333"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectCartItemsCount } from '../../../redux/Cart/cart.selectors';\r\nimport { signOutUserStart } from '../../../redux/User/user.actions';\r\nimport AdminToolbar from '../../AdminToolbar';\r\n\r\nimport './styles.scss'\r\n\r\nconst mapState = (state) => ({\r\n    currentUser: state.user.currentUser,\r\n    totalNumCartItems: selectCartItemsCount(state),\r\n\r\n});\r\n\r\nconst Sidedrawer = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const { currentUser, totalNumCartItems } = useSelector(mapState);\r\n    \r\n\r\n    const signOut = () => {\r\n        dispatch(signOutUserStart());\r\n    }\r\n\r\n    return (\r\n\r\n    <div>\r\n\r\n    <nav className=\"side-drawer\">\r\n        <ul>\r\n            <li><a href=\"/\">Home</a></li>\r\n           \r\n            <li><a href=\"/search\">Store</a> </li>\r\n            <li><AdminToolbar /></li>\r\n            {currentUser && [\r\n\r\n<li>\r\n    <Link to='/dashboard'>\r\n        My Account\r\n            </Link>\r\n</li>,\r\n<li>\r\n    <Link onClick={() => signOut()}>\r\n        LogOut\r\n            </Link>\r\n</li>\r\n\r\n]}\r\n\r\n{!currentUser && [\r\n\r\n<li>\r\n    <Link to='/registration'>\r\n        Register\r\n        </Link>\r\n</li>,\r\n<li>\r\n    <Link to='/login'>\r\n        Login\r\n            </Link>\r\n</li>\r\n\r\n]}\r\n        </ul>\r\n        \r\n    </nav>\r\n            \r\n            \r\n            \r\n            </div>\r\n                    \r\n                \r\n    )     \r\n    \r\n};\r\n\r\nexport default Sidedrawer;","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\User\\user.helpers.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.types.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.types.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\firebase\\utils.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Products\\products.helpers.js",["334"],"import { firestore } from '../../firebase/utils';\r\nimport productsTypes from './products.types';\r\n\r\nexport const handleAddProduct = product => {\r\n    return new Promise((resolve, reject) => {\r\n        firestore\r\n            .collection('products')\r\n            .doc()\r\n            .set(product)\r\n            .then(() => {\r\n                resolve();\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}\r\n\r\nexport const handleFetchProducts = ({ filterType, startAfterDoc, persistProducts = [] }) => {\r\n    return new Promise((resolve, reject) => {\r\n        const pageSize = 6;\r\n\r\n        let ref = firestore.collection('products').orderBy('createdDate').limit(pageSize);\r\n\r\n        if (filterType) ref = ref.where('productCategory', '==', filterType);\r\n        if (startAfterDoc) ref = ref.startAfter(startAfterDoc)\r\n\r\n        ref\r\n            .get()\r\n            .then(snapshot => {\r\n                const totalCount = snapshot.size;\r\n\r\n                const data = [\r\n                    ...persistProducts,\r\n                    ...snapshot.docs.map(doc => {\r\n                        return {\r\n                            ...doc.data(),\r\n                            documentID: doc.id\r\n                        }\r\n                    })\r\n                ];\r\n\r\n                resolve({\r\n                    data,\r\n                    queryDoc: snapshot.docs[totalCount - 1],\r\n                    isLastPage: totalCount < 1\r\n                });\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nexport const handleDeleteProduct = documentID => {\r\n    return new Promise((resolve, reject) => {\r\n        firestore\r\n            .collection('products')\r\n            .doc(documentID)\r\n            .delete()\r\n            .then(() => {\r\n                resolve();\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    })\r\n} \r\n\r\nexport const handleFetchProduct = productID => {\r\n    return new Promise((resolve, reject) => {\r\n        firestore\r\n        .collection('products')\r\n        .doc(productID)\r\n        .get()\r\n        .then(snapshot => {\r\n            if (snapshot.exists) {\r\n                resolve(\r\n                    snapshot.data()\r\n                );\r\n            }\r\n        })\r\n        .catch(err => {\r\n            reject(err);\r\n        })\r\n    })\r\n}\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\redux\\Cart\\cart.utils.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\ProductResults\\index.js",["335","336"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { fetchProductsStart } from '../../redux/Products/products.actions';\r\nimport Product from './Product';\r\nimport FormSelect from '../forms/FormSelect';\r\nimport LoadMore from '../LoadMore';\r\nimport './styles.scss';\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\nconst ProductResults = ({ }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { filterType } = useParams();\r\n    const { products } = useSelector(mapState);\r\n\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductsStart({ filterType })\r\n        )\r\n    }, [filterType]);\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/search/${nextFilter}`)\r\n    };\r\n\r\n    if (!Array.isArray(data)) return null;\r\n\r\n    if (data.length < 1) {\r\n        return (\r\n            <div className='products'>\r\n                <p>No results found.</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const configFilters = {\r\n        defaultValue: filterType,\r\n        options: [{\r\n            name: 'Show all',\r\n            value: ''\r\n        }, {\r\n            name: 'Prints',\r\n            value: 'prints'\r\n        }, {\r\n            name: 'Cards',\r\n            value: 'cards'\r\n        }],\r\n        handleChange: handleFilter\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({ \r\n                filterType, \r\n                startAfterDoc: queryDoc,\r\n                persistProducts: data\r\n            })\r\n        )\r\n    }\r\n\r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore, \r\n    }\r\n\r\n    return (\r\n        <div className='products'>\r\n            <h1>\r\n                Browse Products\r\n            </h1>\r\n\r\n            <FormSelect {...configFilters} />\r\n\r\n            <div className='productResults'>\r\n                {data.map((product, pos) => {\r\n                    const { productThumbnail, productName, productPrice } = product;\r\n                    if (!productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n\r\n                    const configProduct = {\r\n                        ...product\r\n                    }\r\n\r\n                    return (\r\n                        <Product key={pos} {...configProduct} />\r\n                    )\r\n                })}\r\n            </div>\r\n            {!isLastPage && (\r\n                <LoadMore {...configLoadMore}/>\r\n            )}\r\n            \r\n               \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductResults;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Landing\\index.js",["337","338","339","340","341","342","343","344","345","346","347","348"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { fetchProductsStart, setProduct } from '../../redux/Products/products.actions';\r\n\r\nimport Welcome from '../Welcome';\r\nimport Sidedrawer from '../Sidedrawer/SideDrawer';\r\nimport Backdrop from '../Sidedrawer/Backdrop/Backdrop';\r\nimport Preview from './Preview';\r\nimport LoadMore from '../../components/LoadMore';\r\nimport './styles.scss'\r\n\r\n\r\n\r\nconst mapState = ({ productsData }) => ({\r\n    products: productsData.products\r\n});\r\n\r\n\r\nconst Landing = ({ }) => {\r\n\r\n    ;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { filterType } = useParams();\r\n    const { products } = useSelector(mapState);\r\n\r\n    const { data, queryDoc, isLastPage } = products;\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductsStart({ filterType })\r\n        )\r\n    }, [filterType]);\r\n\r\n    const handleFilter = (e) => {\r\n        const nextFilter = e.target.value;\r\n        history.push(`/search/${nextFilter}`)\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(\r\n            fetchProductsStart({\r\n                startAfterDoc: queryDoc,\r\n                persistProducts: data\r\n            })\r\n        );\r\n    };\r\n    \r\n    const configLoadMore = {\r\n        onLoadMoreEvt: handleLoadMore\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='directory'>\r\n            <div className='wrap'>\r\n                \r\n                <div className='description'>\r\n                    Valley Apiaries is a local backyard beekeeper providing local raw honey and beekeeping services. Hives located in Locust Valley and Lindenhurst NY.\r\n                </div>\r\n\r\n                <img src='https://drive.google.com/uc?id=1iWbCdtrA6Mk3Hi_yLNzd58pjd9rBLUfa' alt='sunflower' className='background-img'/>\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\SignIn\\index.js",["349"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { emailSignInStart, googleSignInStart } from '../../redux/User/user.actions';\r\nimport './styles.scss';\r\nimport Buttons from '../forms/Button';\r\n\r\n\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport FormInput from '../forms/FormInput';\r\nimport Button from '../forms/Button';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\nconst SignIn = props => {\r\n    const dispatch = useDispatch();\r\n    const { currentUser } = useSelector(mapState)\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            resetForm();\r\n            history.push('/');\r\n        }\r\n\r\n    }, [currentUser])\r\n\r\n    const resetForm = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        dispatch(emailSignInStart({ email, password }));\r\n\r\n    }\r\n\r\n    const handleGoogleSignIn = () => {\r\n        dispatch(googleSignInStart());\r\n    }\r\n\r\n    const configAuthWrapper = {\r\n        headline: 'Login'\r\n    }\r\n\r\n    return (\r\n        <AuthWrapper {...configAuthWrapper}>\r\n\r\n            <div className='formWrap'>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        placeholder='Email'\r\n                        handleChange={e => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        placeholder='Password'\r\n                        handleChange={e => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <Buttons type='submit'>\r\n                        Login\r\n                        </Buttons>\r\n\r\n\r\n                    <div className='socialSignIn'>\r\n                        <div className='row'>\r\n                            <Button onClick={handleGoogleSignIn}>\r\n                                Sign in with Google\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='links'>\r\n                        <Link to='/recovery'>\r\n                            Reset Password\r\n                        </Link>\r\n                        <Link to='/registration'>\r\n                            Register\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AuthWrapper>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default SignIn;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Signup\\index.js",["350"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { signUpUserStart } from '../../redux/User/user.actions';\r\nimport './styles.scss';\r\n\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport FormInput from '../forms/FormInput';\r\nimport Button from '../forms/Button';\r\n\r\nconst mapState = ({ user }) => ({\r\n\r\n        currentUser: user.currentUser,\r\n        userErr: user.userErr\r\n   \r\n})\r\n\r\nconst Signup = props => {\r\n    const dispatch = useDispatch();\r\n    const { currentUser, userErr } = useSelector(mapState)\r\n    const history = useHistory();\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            reset();\r\n            history.push('/');\r\n        }\r\n\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(userErr) && userErr.length > 0)\r\n            setErrors(userErr)\r\n    }, [userErr]);\r\n\r\n    const reset = () => {\r\n        setDisplayName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setErrors([]);\r\n    };\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(signUpUserStart({\r\n            displayName,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }))\r\n\r\n        \r\n//\r\n    }\r\n\r\n\r\n\r\n        \r\n\r\n        const configAuthWrapper = {\r\n            headline: 'Registration'\r\n        }\r\n\r\n        return (\r\n            <AuthWrapper {...configAuthWrapper}>\r\n\r\n                <div className=\"formWrap\" >\r\n\r\n                    {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((err, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {err}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    )}\r\n                    <form onSubmit={handleFormSubmit} >\r\n\r\n                        <FormInput\r\n                            type='text'\r\n                            name='displayName'\r\n                            value={displayName}\r\n                            placeholder='Full Name'\r\n                            handleChange={e => setDisplayName(e.target.value)}\r\n                        />\r\n\r\n                        <FormInput\r\n                            type='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Email'\r\n                            handleChange={e => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <FormInput\r\n                            type='password'\r\n                            name='password'\r\n                            value={password}\r\n                            placeholder='Password'\r\n                            handleChange={e => setPassword(e.target.value)}\r\n                        />\r\n\r\n                        <FormInput\r\n                            type='password'\r\n                            name='confirmPassword'\r\n                            value={confirmPassword}\r\n                            placeholder='Confirm Password'\r\n                            handleChange={e => setConfirmPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Button type='submit' >\r\n                            Register\r\n                        </Button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </AuthWrapper>\r\n        );\r\n    }\r\n\r\n\r\nexport default Signup;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\EmailPassword\\index.js",["351"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { resetPasswordStart, resetUserState } from '../../redux/User/user.actions';\r\nimport './styles.scss';\r\n\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport FormInput from '../forms/FormInput';\r\nimport Button from '../forms/Button';\r\n\r\nconst mapState = ({ user }) => ({\r\n    resetPasswordSuccess: user.resetPasswordSuccess,\r\n    userErr: user.userErr\r\n});\r\n\r\nconst EmailPassword = props => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { resetPasswordSuccess, userErr } = useSelector(mapState)\r\n    const[email, setEmail] = useState('');\r\n    const[errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (resetPasswordSuccess) {\r\n            dispatch(resetUserState());\r\n            history.push('/login');\r\n        }\r\n    }, [resetPasswordSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(userErr) && userErr.length > 0) {\r\n            setErrors(userErr);\r\n        }\r\n    }, [userErr]);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(resetPasswordStart({ email }));\r\n        \r\n    }\r\n\r\n        const configAuthWrapper = {\r\n            headline: 'Email Password'\r\n        };\r\n\r\n        return(\r\n            <AuthWrapper {...configAuthWrapper}>\r\n                <div className='formWrap'>\r\n\r\n                    {errors.length > 0 && (\r\n                        <ul>\r\n                            {errors.map((e, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        {e}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    )}\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormInput \r\n                            type='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Email'\r\n                            handleChange={e => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <Button type='submit'>\r\n                            Email Password\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </AuthWrapper>\r\n        );\r\n    }\r\n\r\n\r\nexport default EmailPassword;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Square\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\Utils\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\ProductCard\\index.js",["352","353","354","355"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductStart, setProduct } from '../../redux/Products/products.actions';\r\nimport { addProduct } from '../../redux/Cart/cart.actions';\r\nimport Button from '../forms/Button';\r\nimport './styles.scss';\r\n\r\nconst mapState = state => ({\r\n    product: state.productsData.product\r\n})\r\n\r\n\r\n\r\nconst ProductCard = ({ }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { productID } = useParams();\r\n    const { product } = useSelector(mapState);\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    // const [productPrice, setProductPrice] = useState(product)\r\n\r\n    const {\r\n        productThumbnail,\r\n        productName,\r\n        productPrice,\r\n        productDesc,\r\n        productCategory,\r\n        secondProductPrice\r\n    } = product;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            fetchProductStart(productID)\r\n        )\r\n\r\n        return () => {\r\n            dispatch(\r\n                setProduct({})\r\n            )\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const handleAddToCart = (product) => {\r\n        if (!product) return null;\r\n        if (isChecked) {\r\n            dispatch(\r\n                addProduct({\r\n                    productThumbnail,\r\n                    productName,\r\n                    productDesc,\r\n                    productCategory,\r\n                    secondProductPrice\r\n                })\r\n            );\r\n        }\r\n        if (!isChecked) {\r\n            dispatch(\r\n                addProduct({\r\n                    productThumbnail,\r\n                    productName,\r\n                    productDesc,\r\n                    productCategory,\r\n                    productPrice\r\n                })\r\n            );\r\n        }\r\n        history.push('/cart');\r\n    }\r\n\r\n\r\n\r\n    const configAddToCartBtn = {\r\n        type: 'button'\r\n    }\r\n\r\n    return (\r\n        <div className='productCard'>\r\n            <div className='hero'>\r\n                <img src={productThumbnail} />\r\n            </div>\r\n            <div className='productDetails'>\r\n                <ul>\r\n                    <li>\r\n                        <h1>\r\n                            {productName}\r\n                        </h1>\r\n                    </li>\r\n                    {productCategory == 'prints' && secondProductPrice &&\r\n                        <li>\r\n                            8.5\" x 11\" <br />\r\n                            12\" x 18\": <input name='largePrint' type='checkbox' checked={isChecked} onChange={(event) => setIsChecked(event.currentTarget.checked)} />\r\n                        </li>\r\n                    }\r\n                    {isChecked &&\r\n                        <li>\r\n                            <span>\r\n                                ${secondProductPrice}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                    {!isChecked &&\r\n                        <li>\r\n                            <span>\r\n                                ${productPrice}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                    <li>\r\n                        <div className='addToCart'>\r\n                            <Button {...configAddToCartBtn} onClick={() => handleAddToCart(product)}>\r\n                                Add to cart\r\n                            </Button>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <span\r\n                            className='desc'\r\n                            dangerouslySetInnerHTML={{ __html: productDesc }}\r\n                        >\r\n\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Checkout\\index.js",["356","357","358","359","360"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCartItems, selectCartTotal, selectOtherCartTotal } from '../../redux/Cart/cart.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport './styles.scss';\r\nimport Button from '../forms/Button';\r\nimport Item from './Item';\r\n\r\n\r\nconst mapState = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n});\r\n\r\nconst mapOtherState = createStructuredSelector({\r\n    otherCartItems: selectCartItems,\r\n    otherTotal: selectOtherCartTotal\r\n})\r\n\r\nconst Checkout = ({ }) => {\r\n    const history = useHistory();\r\n    const { cartItems, total } = useSelector(mapState);\r\n    const { otherCartItems, otherTotal } = useSelector(mapOtherState)\r\n\r\n\r\n    return (\r\n        <div className='checkout'>\r\n            <h1>\r\n                Checkout\r\n            </h1>\r\n            <div className='cart'>\r\n                {cartItems.length > 0 ? (\r\n                    <table className='checkoutContainer' border='0' cellPadding='0' cellSpacing='0'>\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <table className='checkoutHeader' border='0' cellPadding='10' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>\r\n                                                Product\r\n                                         </th>\r\n                                            <th>\r\n                                                Description\r\n                                         </th>\r\n                                            <th>\r\n                                                Quantity\r\n                                         </th>\r\n                                            <th>\r\n                                                Price\r\n                                         </th>\r\n                                            <th>\r\n                                                Remove\r\n                                         </th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <table border='0' cellPadding='0' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        {cartItems.map((item, pos) => {\r\n                                            return (\r\n                                                <tr key={pos}>\r\n                                                    <td>\r\n                                                        <Item {...item} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <table align='right' border='0' cellSpacing='0' cellPadding='10'>\r\n                                    <tbody>\r\n                                        <tr align='left'>\r\n                                            <td>\r\n\r\n                                                <h3>\r\n                                                    Total: ${total}\r\n                                                </h3>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <table border='0' cellPadding='10' cellSpacing='0'>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <Button onClick={() => history.goBack()}>\r\n                                                                Continue Shopping\r\n                                                        </Button>\r\n                                                        </td>\r\n                                                        <td>\r\n\r\n                                                            <Button onClick={() => history.push('/payment')}>\r\n                                                                Checkout\r\n                                                            </Button>\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                ) : (\r\n                        <p>\r\n                            Your cart is empty.\r\n                        </p>\r\n                    )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\LoadMore\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Modal\\index.js",["361"],"import React, { useState } from 'react';\r\nimport './styles.scss'\r\n\r\nconst Modal = ({ hideModal, toggleModal, children }) => {\r\n    if (hideModal) return null;\r\n\r\n    return [\r\n        <div className='modalOverlay' >\r\n            <div className='modalWrap'>\r\n                <div className='modal'>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ];\r\n}\r\n\r\nexport default Modal;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\forms\\Button\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\forms\\FormInput\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\forms\\FormSelect\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\customHooks\\useAuth.js",["362"],"import { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst mapState = ({ user  }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\nconst useAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!currentUser) {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [currentUser]);\r\n\r\n    return currentUser;\r\n}\r\n\r\nexport default useAuth;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\customHooks\\useAdminAuth.js",["363","364"],"import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { checkUserSession } from '../redux/User/user.actions';\r\nimport { checkUserIsAdmin } from '../Utils';\r\n\r\nconst mapState = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\nconst useAdminAuth = props => {\r\n    const { currentUser } = useSelector(mapState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!checkUserIsAdmin(currentUser)) {\r\n            history.push('/login');\r\n        }\r\n    }, [currentUser]);\r\n\r\n    return currentUser;\r\n}\r\n\r\nexport default useAdminAuth;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\firebase\\config.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\UserProfile\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\Utils\\paymentForm.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\AdminToolbar\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\ProductResults\\Product\\index.js",["365"],"import React, { useState } from 'react';\r\nimport Button from '../../../components/forms/Button';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../../../redux/Cart/cart.actions'\r\n\r\n\r\nconst Product = (product) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {\r\n        documentID,\r\n        productThumbnail,\r\n        productName,\r\n        productPrice, \r\n        secondProductPrice,\r\n        productCategory,\r\n        productDesc\r\n    } = product;\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    if (!documentID || !productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n\r\n    const configAddToCartButton = {\r\n        type: 'button',\r\n    }\r\n\r\n    const handleAddToCart = (product) => {\r\n        if (!product) return;\r\n        \r\n            if (isChecked) {\r\n                dispatch(\r\n                    addProduct({\r\n                        productThumbnail,\r\n                        productName,\r\n                        productDesc,\r\n                        productCategory,\r\n                        secondProductPrice,\r\n                        documentID\r\n                    })\r\n                );\r\n            }\r\n            if (!isChecked) {\r\n                dispatch(\r\n                    addProduct({\r\n                        productThumbnail,\r\n                        productName,\r\n                        productDesc,\r\n                        productCategory,\r\n                        productPrice,\r\n                        documentID\r\n                    })\r\n                );\r\n            }\r\n        \r\n        history.push('/cart');\r\n    }; \r\n\r\n    return (\r\n        <div className='product'>\r\n            <div className='thumb'>\r\n                <Link to={`/product/${documentID}`}>\r\n                    <img src={productThumbnail} alt={productName} />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='details'>\r\n                <ul>\r\n                    <li>\r\n                        <span className='name'>\r\n                            <Link to={`/product/${documentID}`}>\r\n                                {productName}\r\n                            </Link>\r\n                        </span>\r\n                    </li>\r\n                    {productCategory == 'prints' && secondProductPrice &&\r\n                        <li>\r\n                            8.5\" x 11\" <br />\r\n                            12\" x 18\": <input name='largePrint' type='checkbox' checked={isChecked} onChange={(event) => setIsChecked(event.currentTarget.checked)} />\r\n                        </li>\r\n                    }\r\n                    {isChecked &&\r\n                        <li>\r\n                            <span>\r\n                                ${secondProductPrice}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                    {!isChecked &&\r\n                        <li>\r\n                            <span>\r\n                                ${productPrice}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                    \r\n                    <li>\r\n                        <div className='addToCart'>\r\n                            <Button {...configAddToCartButton} onClick={() => handleAddToCart(product)}>\r\n                                Add to Cart\r\n                            </Button>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\AuthWrapper\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Landing\\Preview\\index.js",["366","367","368","369","370"],"import React from 'react';\r\nimport Button from '../../../components/forms/Button';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../../../redux/Cart/cart.actions'\r\n\r\n\r\nconst Preview = (product) => {\r\n    \r\n    const {\r\n        documentID,\r\n        productThumbnail,\r\n        productName,\r\n        productPrice\r\n    } = product;\r\n\r\n    if (!documentID || !productThumbnail || !productName || typeof productPrice === 'undefined') return null;\r\n\r\n    return (\r\n        <div className='preview'>\r\n            <img className=\"preview-img\" src={productThumbnail} alt={productName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;\r\n\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Checkout\\Item\\index.js",["371"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeCartItem, addProduct, reduceCartItem } from '../../../redux/Cart/cart.actions';\r\n\r\n \r\nconst Item = (product) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        productName,\r\n        productThumbnail,\r\n        productPrice,\r\n        secondProductPrice,\r\n        quantity,\r\n        documentID\r\n    } = product;\r\n\r\n    const handleRemoveCartItem = (product) => {\r\n        dispatch(\r\n            removeCartItem(\r\n                product\r\n            )\r\n        );\r\n    }\r\n\r\n    const handleAddProduct = (product) => {\r\n        dispatch(\r\n            addProduct(product)\r\n        );\r\n    }\r\n\r\n    const handleReduceItem = (product) => {\r\n        dispatch(\r\n            reduceCartItem(product)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <table className='cartItem' border='0' cellSpacing='0' cellPadding='10'>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img src={productThumbnail} alt={productName} />\r\n                    </td>\r\n                    <td>\r\n                        {productName}\r\n                    </td>\r\n                    <td>\r\n                        <span className='cartBtn' onClick={() => handleReduceItem(product)}>\r\n                            {`< `}\r\n                        </span>\r\n                        <span>\r\n                            {quantity}\r\n                        </span>\r\n                        <span className='cartBtn' onClick={() => handleAddProduct(product)}>\r\n                            {` >`}\r\n                        </span>\r\n                    </td>\r\n                    {productPrice &&\r\n                    <td>\r\n                        ${productPrice}\r\n                    </td>\r\n                    }\r\n                    {!productPrice &&\r\n                    <td>\r\n                        ${secondProductPrice}\r\n                    </td>\r\n                    }\r\n                    <td align='center'>\r\n                        <span className='cartBtn' onClick={() => handleRemoveCartItem(product)}>\r\n                            X\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\components\\Welcome\\index.js",[],"C:\\Users\\joshu\\Documents\\Business Code\\valley-apiaries\\src\\layouts\\WelcomeLayout.js",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":26,"column":8,"nodeType":"378","messageId":"379","endLine":26,"endColumn":23},{"ruleId":"376","severity":1,"message":"380","line":27,"column":8,"nodeType":"378","messageId":"379","endLine":27,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":36,"column":6,"nodeType":"383","endLine":36,"endColumn":8,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":20,"column":1,"nodeType":"387","endLine":23,"endColumn":3},{"ruleId":"388","severity":1,"message":"389","line":4,"column":17,"nodeType":"390","messageId":"391","endLine":4,"endColumn":21},{"ruleId":"376","severity":1,"message":"392","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":35,"column":4,"nodeType":"383","endLine":35,"endColumn":6,"suggestions":"393"},{"ruleId":"388","severity":1,"message":"389","line":5,"column":25,"nodeType":"390","messageId":"391","endLine":5,"endColumn":28},{"ruleId":"388","severity":1,"message":"389","line":4,"column":15,"nodeType":"390","messageId":"391","endLine":4,"endColumn":17},{"ruleId":"376","severity":1,"message":"394","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":14},{"ruleId":"376","severity":1,"message":"395","line":11,"column":8,"nodeType":"378","messageId":"379","endLine":11,"endColumn":14},{"ruleId":"376","severity":1,"message":"396","line":50,"column":12,"nodeType":"378","messageId":"379","endLine":50,"endColumn":18},{"ruleId":"376","severity":1,"message":"397","line":50,"column":20,"nodeType":"378","messageId":"379","endLine":50,"endColumn":27},{"ruleId":"376","severity":1,"message":"398","line":51,"column":12,"nodeType":"378","messageId":"379","endLine":51,"endColumn":25},{"ruleId":"381","severity":1,"message":"399","line":112,"column":8,"nodeType":"383","endLine":112,"endColumn":19,"suggestions":"400"},{"ruleId":"376","severity":1,"message":"401","line":2,"column":38,"nodeType":"378","messageId":"379","endLine":2,"endColumn":42},{"ruleId":"376","severity":1,"message":"392","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"402","line":2,"column":23,"nodeType":"378","messageId":"379","endLine":2,"endColumn":34},{"ruleId":"376","severity":1,"message":"403","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":26},{"ruleId":"376","severity":1,"message":"404","line":24,"column":13,"nodeType":"378","messageId":"379","endLine":24,"endColumn":24},{"ruleId":"376","severity":1,"message":"405","line":19,"column":26,"nodeType":"378","messageId":"379","endLine":19,"endColumn":43},{"ruleId":"376","severity":1,"message":"406","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":21},{"ruleId":"388","severity":1,"message":"389","line":14,"column":25,"nodeType":"390","messageId":"391","endLine":14,"endColumn":28},{"ruleId":"381","severity":1,"message":"382","line":26,"column":8,"nodeType":"383","endLine":26,"endColumn":20,"suggestions":"407"},{"ruleId":"376","severity":1,"message":"392","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"408","line":4,"column":30,"nodeType":"378","messageId":"379","endLine":4,"endColumn":40},{"ruleId":"376","severity":1,"message":"409","line":6,"column":8,"nodeType":"378","messageId":"379","endLine":6,"endColumn":15},{"ruleId":"376","severity":1,"message":"410","line":7,"column":8,"nodeType":"378","messageId":"379","endLine":7,"endColumn":18},{"ruleId":"376","severity":1,"message":"411","line":8,"column":8,"nodeType":"378","messageId":"379","endLine":8,"endColumn":16},{"ruleId":"376","severity":1,"message":"412","line":9,"column":8,"nodeType":"378","messageId":"379","endLine":9,"endColumn":15},{"ruleId":"376","severity":1,"message":"413","line":10,"column":8,"nodeType":"378","messageId":"379","endLine":10,"endColumn":16},{"ruleId":"388","severity":1,"message":"389","line":20,"column":18,"nodeType":"390","messageId":"391","endLine":20,"endColumn":21},{"ruleId":"376","severity":1,"message":"414","line":28,"column":29,"nodeType":"378","messageId":"379","endLine":28,"endColumn":39},{"ruleId":"381","severity":1,"message":"382","line":34,"column":8,"nodeType":"383","endLine":34,"endColumn":20,"suggestions":"415"},{"ruleId":"376","severity":1,"message":"416","line":36,"column":11,"nodeType":"378","messageId":"379","endLine":36,"endColumn":23},{"ruleId":"376","severity":1,"message":"417","line":50,"column":11,"nodeType":"378","messageId":"379","endLine":50,"endColumn":25},{"ruleId":"381","severity":1,"message":"399","line":30,"column":8,"nodeType":"383","endLine":30,"endColumn":21,"suggestions":"418"},{"ruleId":"381","severity":1,"message":"399","line":34,"column":8,"nodeType":"383","endLine":34,"endColumn":21,"suggestions":"419"},{"ruleId":"381","severity":1,"message":"420","line":28,"column":8,"nodeType":"383","endLine":28,"endColumn":30,"suggestions":"421"},{"ruleId":"388","severity":1,"message":"389","line":15,"column":22,"nodeType":"390","messageId":"391","endLine":15,"endColumn":25},{"ruleId":"381","severity":1,"message":"422","line":44,"column":8,"nodeType":"383","endLine":44,"endColumn":10,"suggestions":"423"},{"ruleId":"424","severity":1,"message":"425","line":84,"column":17,"nodeType":"426","endLine":84,"endColumn":47},{"ruleId":"427","severity":1,"message":"428","line":93,"column":38,"nodeType":"429","messageId":"391","endLine":93,"endColumn":40},{"ruleId":"376","severity":1,"message":"392","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"430","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"388","severity":1,"message":"389","line":21,"column":19,"nodeType":"390","messageId":"391","endLine":21,"endColumn":22},{"ruleId":"376","severity":1,"message":"431","line":24,"column":13,"nodeType":"378","messageId":"379","endLine":24,"endColumn":27},{"ruleId":"376","severity":1,"message":"432","line":24,"column":29,"nodeType":"378","messageId":"379","endLine":24,"endColumn":39},{"ruleId":"376","severity":1,"message":"392","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"381","severity":1,"message":"399","line":18,"column":8,"nodeType":"383","endLine":18,"endColumn":21,"suggestions":"433"},{"ruleId":"376","severity":1,"message":"434","line":4,"column":10,"nodeType":"378","messageId":"379","endLine":4,"endColumn":26},{"ruleId":"381","severity":1,"message":"399","line":19,"column":8,"nodeType":"383","endLine":19,"endColumn":21,"suggestions":"435"},{"ruleId":"427","severity":1,"message":"428","line":76,"column":38,"nodeType":"429","messageId":"391","endLine":76,"endColumn":40},{"ruleId":"376","severity":1,"message":"394","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"436","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":14},{"ruleId":"376","severity":1,"message":"437","line":3,"column":16,"nodeType":"378","messageId":"379","endLine":3,"endColumn":26},{"ruleId":"376","severity":1,"message":"402","line":4,"column":10,"nodeType":"378","messageId":"379","endLine":4,"endColumn":21},{"ruleId":"376","severity":1,"message":"438","line":5,"column":10,"nodeType":"378","messageId":"379","endLine":5,"endColumn":20},{"ruleId":"376","severity":1,"message":"439","line":15,"column":9,"nodeType":"378","messageId":"379","endLine":15,"endColumn":19},"no-native-reassign",["440"],"no-negated-in-lhs",["441"],"no-unused-vars","'DashboardLayout' is defined but never used.","Identifier","unusedVar","'PaymentDetails' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["442"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useState' is defined but never used.",["443"],"'Button' is defined but never used.","'Square' is defined but never used.","'isLoad' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'errorMessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["444"],"'take' is defined but never used.","'useDispatch' is defined but never used.","'signOutUserStart' is defined but never used.","'currentUser' is assigned a value but never used.","'totalNumCartItems' is assigned a value but never used.","'productsTypes' is defined but never used.",["445"],"'setProduct' is defined but never used.","'Welcome' is defined but never used.","'Sidedrawer' is defined but never used.","'Backdrop' is defined but never used.","'Preview' is defined but never used.","'LoadMore' is defined but never used.","'isLastPage' is assigned a value but never used.",["446"],"'handleFilter' is assigned a value but never used.","'configLoadMore' is assigned a value but never used.",["447"],["448"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["449"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productID'. Either include them or remove the dependency array.",["450"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useEffect' is defined but never used.","'otherCartItems' is assigned a value but never used.","'otherTotal' is assigned a value but never used.",["451"],"'checkUserSession' is defined but never used.",["452"],"'Link' is defined but never used.","'useHistory' is defined but never used.","'addProduct' is defined but never used.","'documentID' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"453","fix":"454"},{"desc":"453","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"458","fix":"460"},{"desc":"461","fix":"462"},{"desc":"461","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"461","fix":"468"},{"desc":"461","fix":"469"},"Update the dependencies array to be: [dispatch]",{"range":"470","text":"471"},{"range":"472","text":"471"},"Update the dependencies array to be: [history, itemCount]",{"range":"473","text":"474"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"475","text":"476"},{"range":"477","text":"476"},"Update the dependencies array to be: [currentUser, history]",{"range":"478","text":"479"},{"range":"480","text":"479"},"Update the dependencies array to be: [dispatch, history, resetPasswordSuccess]",{"range":"481","text":"482"},"Update the dependencies array to be: [dispatch, productID]",{"range":"483","text":"484"},{"range":"485","text":"479"},{"range":"486","text":"479"},[1125,1127],"[dispatch]",[1292,1294],[4047,4058],"[history, itemCount]",[831,843],"[dispatch, filterType]",[973,985],[902,915],"[currentUser, history]",[1050,1063],[945,967],"[dispatch, history, resetPasswordSuccess]",[1174,1176],"[dispatch, productID]",[433,446],[564,577]]